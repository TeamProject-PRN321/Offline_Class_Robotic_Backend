// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OfficeClassRobotic.OfficeClassRobotic.BuisnessObject.DBContext;

#nullable disable

namespace OfficeClassRobotic.BuisnessObject.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240202070947_initdb")]
    partial class initdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PassWordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PassWordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Attendance", b =>
                {
                    b.Property<int>("AttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceID"));

                    b.Property<string>("AttendaceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendanceID");

                    b.HasIndex("ClassID")
                        .IsUnique();

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Class", b =>
                {
                    b.Property<int>("ClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassID"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DayStudy")
                        .HasColumnType("datetime2");

                    b.Property<double>("MarkOfStudent")
                        .HasColumnType("float");

                    b.Property<int>("NumberOfSudent")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.Property<int>("TrungTamRoboticID")
                        .HasColumnType("int");

                    b.HasKey("ClassID");

                    b.HasIndex("SubjectID")
                        .IsUnique();

                    b.HasIndex("TeacherID");

                    b.HasIndex("TrungTamRoboticID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Classroom", b =>
                {
                    b.Property<int>("ClassRoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassRoomID"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrungTamRoboticID")
                        .HasColumnType("int");

                    b.HasKey("ClassRoomID");

                    b.HasIndex("TrungTamRoboticID");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Device", b =>
                {
                    b.Property<int>("DeviceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceID"));

                    b.Property<int>("ClassRoomID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PriceOfDevice")
                        .HasColumnType("float");

                    b.Property<bool>("StatusOfDevice")
                        .HasColumnType("bit");

                    b.HasKey("DeviceID");

                    b.HasIndex("ClassRoomID");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.FeedBack", b =>
                {
                    b.Property<int>("FeedbackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedBackName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("FeedbackID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TeacherID");

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.GiaoTrinh", b =>
                {
                    b.Property<int>("GiaoTrinhID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiaoTrinhID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePDF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaoTrinhName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("GiaoTrinhID");

                    b.HasIndex("SubjectID")
                        .IsUnique();

                    b.ToTable("GiaoTrinhs");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Parent", b =>
                {
                    b.Property<int>("ParentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParentID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParentID");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Staff", b =>
                {
                    b.Property<int>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrungTamRoboticID")
                        .HasColumnType("int");

                    b.HasKey("StaffID");

                    b.HasIndex("TrungTamRoboticID");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentID")
                        .HasColumnType("int");

                    b.HasKey("StudentID");

                    b.HasIndex("ParentID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectID"));

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalSlots")
                        .HasColumnType("int");

                    b.HasKey("SubjectID");

                    b.HasIndex("StudentID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Teacher", b =>
                {
                    b.Property<int>("TeacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Certification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherID");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.TrungTamRobotic", b =>
                {
                    b.Property<int>("TrungTamRoboticID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrungTamRoboticID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrungTamRoboticID");

                    b.HasIndex("AdminID");

                    b.ToTable("TrungTamRobotics");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Attendance", b =>
                {
                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.Class", "Class")
                        .WithOne("Attendance")
                        .HasForeignKey("Models.OfficeClassRobotic.BuisnessObject.Attendance", "ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Class", b =>
                {
                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.Subject", "Subject")
                        .WithOne("Class")
                        .HasForeignKey("Models.OfficeClassRobotic.BuisnessObject.Class", "SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.Teacher", "Teacher")
                        .WithMany("Classes")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.TrungTamRobotic", "TrungTamRobotic")
                        .WithMany("Classes")
                        .HasForeignKey("TrungTamRoboticID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");

                    b.Navigation("TrungTamRobotic");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Classroom", b =>
                {
                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.TrungTamRobotic", null)
                        .WithMany("Classrooms")
                        .HasForeignKey("TrungTamRoboticID");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Device", b =>
                {
                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.Classroom", "Classroom")
                        .WithMany("Devices")
                        .HasForeignKey("ClassRoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.FeedBack", b =>
                {
                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.Student", "Student")
                        .WithMany("Feedbacks")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.Teacher", "Teacher")
                        .WithMany("Feedbacks")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.GiaoTrinh", b =>
                {
                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.Subject", "Subject")
                        .WithOne("GiaoTrinh")
                        .HasForeignKey("Models.OfficeClassRobotic.BuisnessObject.GiaoTrinh", "SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Staff", b =>
                {
                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.TrungTamRobotic", "TrungTamRobotic")
                        .WithMany("Staffs")
                        .HasForeignKey("TrungTamRoboticID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrungTamRobotic");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Student", b =>
                {
                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.Parent", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("ParentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Subject", b =>
                {
                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.Student", "Student")
                        .WithMany("Subjects")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.TrungTamRobotic", b =>
                {
                    b.HasOne("Models.OfficeClassRobotic.BuisnessObject.Admin", "Admin")
                        .WithMany("Robotics")
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Admin", b =>
                {
                    b.Navigation("Robotics");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Class", b =>
                {
                    b.Navigation("Attendance")
                        .IsRequired();
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Classroom", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Parent", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Student", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Subject", b =>
                {
                    b.Navigation("Class")
                        .IsRequired();

                    b.Navigation("GiaoTrinh")
                        .IsRequired();
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.Teacher", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("Models.OfficeClassRobotic.BuisnessObject.TrungTamRobotic", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Classrooms");

                    b.Navigation("Staffs");
                });
#pragma warning restore 612, 618
        }
    }
}
